on: [push]

name: CI

jobs:
  build_and_deploy:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: "latest"

      - run: wasm-pack build denoise
      - run: wasm-pack build text
      - run: wasm-pack build timestamp
      - run: wasm-pack build watermark

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Install npm dependencies
        run: npm ci
        working-directory: denoise
      - name: Install npm dependencies
        run: npm ci
        working-directory: text
      - name: Install npm dependencies
        run: npm ci
        working-directory: timestamp
      - name: Install npm dependencies
        run: npm ci
        working-directory: watermark

      - name: Build denoise app
        run: NODE_ENV=production npm run build --if-present
        working-directory: denoise
      - name: Build text app
        run: NODE_ENV=production npm run build --if-present
        working-directory: text
      - name: Build timestamp app
        run: NODE_ENV=production npm run build --if-present
        working-directory: timestamp
      - name: Build watermark app
        run: NODE_ENV=production npm run build --if-present
        working-directory: watermark

      - run: mkdir -p public/

      - run: mv ./denoise/dist ./public/denoise
      - run: mv ./text/dist ./public/text
      - run: mv ./timestamp/dist ./public/timestamp
      - run: mv ./watermark/dist ./public/watermark

      - run: cp plugins.json public/

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: pip install maturin
      - name: build python wheel 
        run: cd lenna-plugins-extra-py && maturin build --manylinux=off --cargo-extra-args="--features=python"

      - run: mv lenna-plugins-extra-py/target/wheels/lenna_plugins_extra_py*cp38-cp38*.whl ./public/

      - run: ls public/

      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./public
          keep_files: true
